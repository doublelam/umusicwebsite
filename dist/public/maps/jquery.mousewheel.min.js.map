{"version":3,"sources":["jquery.mousewheel.min.js"],"names":["factory","define","amd","exports","module","jQuery","$","handler","event","orgEvent","window","args","slice","call","arguments","delta","deltaX","deltaY","absDelta","offsetX","offsetY","fix","type","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaMode","lineHeight","data","this","pageHeight","Math","max","abs","lowestDelta","shouldAdjustOldDeltas","special","settings","normalizeOffset","getBoundingClientRect","boundingRect","clientX","left","clientY","top","deltaFactor","unshift","nullLowestDeltaTimeout","clearTimeout","setTimeout","nullLowestDelta","dispatch","handle","apply","adjustOldDeltas","toFix","toBind","document","documentMode","Array","prototype","fixHooks","i","length","mouseHooks","mousewheel","version","setup","addEventListener","onmousewheel","getLineHeight","getPageHeight","teardown","removeEventListener","removeData","elem","$elem","$parent","fn","parseInt","css","height","extend","bind","trigger","unmousewheel","unbind"],"mappings":"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","file":"../scripts/jquery.mousewheel.min.js","sourcesContent":["/*!\r\n * jQuery Mousewheel 3.1.13\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n */\r\n\r\n(function (factory) {\r\n    if ( typeof define === 'function' && define.amd ) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['jquery'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        // Node/CommonJS style for Browserify\r\n        module.exports = factory;\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n\r\n    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],\r\n        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?\r\n                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],\r\n        slice  = Array.prototype.slice,\r\n        nullLowestDeltaTimeout, lowestDelta;\r\n\r\n    if ( $.event.fixHooks ) {\r\n        for ( var i = toFix.length; i; ) {\r\n            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;\r\n        }\r\n    }\r\n\r\n    var special = $.event.special.mousewheel = {\r\n        version: '3.1.12',\r\n\r\n        setup: function() {\r\n            if ( this.addEventListener ) {\r\n                for ( var i = toBind.length; i; ) {\r\n                    this.addEventListener( toBind[--i], handler, false );\r\n                }\r\n            } else {\r\n                this.onmousewheel = handler;\r\n            }\r\n            // Store the line height and page height for this particular element\r\n            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));\r\n            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));\r\n        },\r\n\r\n        teardown: function() {\r\n            if ( this.removeEventListener ) {\r\n                for ( var i = toBind.length; i; ) {\r\n                    this.removeEventListener( toBind[--i], handler, false );\r\n                }\r\n            } else {\r\n                this.onmousewheel = null;\r\n            }\r\n            // Clean up the data we added to the element\r\n            $.removeData(this, 'mousewheel-line-height');\r\n            $.removeData(this, 'mousewheel-page-height');\r\n        },\r\n\r\n        getLineHeight: function(elem) {\r\n            var $elem = $(elem),\r\n                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();\r\n            if (!$parent.length) {\r\n                $parent = $('body');\r\n            }\r\n            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;\r\n        },\r\n\r\n        getPageHeight: function(elem) {\r\n            return $(elem).height();\r\n        },\r\n\r\n        settings: {\r\n            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below\r\n            normalizeOffset: true  // calls getBoundingClientRect for each event\r\n        }\r\n    };\r\n\r\n    $.fn.extend({\r\n        mousewheel: function(fn) {\r\n            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');\r\n        },\r\n\r\n        unmousewheel: function(fn) {\r\n            return this.unbind('mousewheel', fn);\r\n        }\r\n    });\r\n\r\n\r\n    function handler(event) {\r\n        var orgEvent   = event || window.event,\r\n            args       = slice.call(arguments, 1),\r\n            delta      = 0,\r\n            deltaX     = 0,\r\n            deltaY     = 0,\r\n            absDelta   = 0,\r\n            offsetX    = 0,\r\n            offsetY    = 0;\r\n        event = $.event.fix(orgEvent);\r\n        event.type = 'mousewheel';\r\n\r\n        // Old school scrollwheel delta\r\n        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }\r\n        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }\r\n        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }\r\n        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }\r\n\r\n        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\r\n        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\r\n            deltaX = deltaY * -1;\r\n            deltaY = 0;\r\n        }\r\n\r\n        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\r\n        delta = deltaY === 0 ? deltaX : deltaY;\r\n\r\n        // New school wheel delta (wheel event)\r\n        if ( 'deltaY' in orgEvent ) {\r\n            deltaY = orgEvent.deltaY * -1;\r\n            delta  = deltaY;\r\n        }\r\n        if ( 'deltaX' in orgEvent ) {\r\n            deltaX = orgEvent.deltaX;\r\n            if ( deltaY === 0 ) { delta  = deltaX * -1; }\r\n        }\r\n\r\n        // No change actually happened, no reason to go any further\r\n        if ( deltaY === 0 && deltaX === 0 ) { return; }\r\n\r\n        // Need to convert lines and pages to pixels if we aren't already in pixels\r\n        // There are three delta modes:\r\n        //   * deltaMode 0 is by pixels, nothing to do\r\n        //   * deltaMode 1 is by lines\r\n        //   * deltaMode 2 is by pages\r\n        if ( orgEvent.deltaMode === 1 ) {\r\n            var lineHeight = $.data(this, 'mousewheel-line-height');\r\n            delta  *= lineHeight;\r\n            deltaY *= lineHeight;\r\n            deltaX *= lineHeight;\r\n        } else if ( orgEvent.deltaMode === 2 ) {\r\n            var pageHeight = $.data(this, 'mousewheel-page-height');\r\n            delta  *= pageHeight;\r\n            deltaY *= pageHeight;\r\n            deltaX *= pageHeight;\r\n        }\r\n\r\n        // Store lowest absolute delta to normalize the delta values\r\n        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );\r\n\r\n        if ( !lowestDelta || absDelta < lowestDelta ) {\r\n            lowestDelta = absDelta;\r\n\r\n            // Adjust older deltas if necessary\r\n            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\r\n                lowestDelta /= 40;\r\n            }\r\n        }\r\n\r\n        // Adjust older deltas if necessary\r\n        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\r\n            // Divide all the things by 40!\r\n            delta  /= 40;\r\n            deltaX /= 40;\r\n            deltaY /= 40;\r\n        }\r\n\r\n        // Get a whole, normalized value for the deltas\r\n        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);\r\n        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);\r\n        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);\r\n\r\n        // Normalise offsetX and offsetY properties\r\n        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {\r\n            var boundingRect = this.getBoundingClientRect();\r\n            offsetX = event.clientX - boundingRect.left;\r\n            offsetY = event.clientY - boundingRect.top;\r\n        }\r\n\r\n        // Add information to the event object\r\n        event.deltaX = deltaX;\r\n        event.deltaY = deltaY;\r\n        event.deltaFactor = lowestDelta;\r\n        event.offsetX = offsetX;\r\n        event.offsetY = offsetY;\r\n        // Go ahead and set deltaMode to 0 since we converted to pixels\r\n        // Although this is a little odd since we overwrite the deltaX/Y\r\n        // properties with normalized deltas.\r\n        event.deltaMode = 0;\r\n\r\n        // Add event and delta to the front of the arguments\r\n        args.unshift(event, delta, deltaX, deltaY);\r\n\r\n        // Clearout lowestDelta after sometime to better\r\n        // handle multiple device types that give different\r\n        // a different lowestDelta\r\n        // Ex: trackpad = 3 and mouse wheel = 120\r\n        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }\r\n        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);\r\n\r\n        return ($.event.dispatch || $.event.handle).apply(this, args);\r\n    }\r\n\r\n    function nullLowestDelta() {\r\n        lowestDelta = null;\r\n    }\r\n\r\n    function shouldAdjustOldDeltas(orgEvent, absDelta) {\r\n        // If this is an older event and the delta is divisable by 120,\r\n        // then we are assuming that the browser is treating this as an\r\n        // older mouse wheel event and that we should divide the deltas\r\n        // by 40 to try and get a more usable deltaFactor.\r\n        // Side note, this actually impacts the reported scroll distance\r\n        // in older browsers and can cause scrolling to be slower than native.\r\n        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\r\n        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;\r\n    }\r\n\r\n}));"]}